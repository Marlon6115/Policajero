
//mainwindow.h 

#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QVector>
#include <QString>


struct Producto {
    QString nombre;
    float precio;
};

QT_BEGIN_NAMESPACE
namespace Ui { class MainWindow; }
QT_END_NAMESPACE

class MainWindow : public QMainWindow {
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

private slots:
    void on_btnBuscar_clicked();
    void on_btnAgregar_clicked();
    void on_btnVender_clicked();
    void on_tablaFactura_cellChanged(int row, int column);

private:
    Ui::MainWindow *ui;

    QVector<Producto> inventario;

    void cargarInventario();
    Producto buscarProductoPorNombre(const QString &nombre);
    float buscarPrecioProducto(const QString &nombre);
};

#endif // MAINWINDOW_H


//mainwindow.cpp

#include "mainwindow.h"
#include "ui_mainwindow.h"

#include <QFile>
#include <QTextStream>
#include <QMessageBox>
#include <QDateTime>
#include <QListWidgetItem>
#include <QTableWidgetItem>

MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    cargarInventario();
    connect(ui->tablaFactura, &QTableWidget::cellChanged, this, &MainWindow::on_tablaFactura_cellChanged);
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::cargarInventario() {
    inventario = {
        {"Pan de yuca", 0.25},
        {"Pan integral", 0.30},
        {"Pan francés", 0.20},
        {"Pan dulce", 0.40},
        {"Pan con queso", 0.50}
    };
}

Producto MainWindow::buscarProductoPorNombre(const QString &nombre) {
    for (const auto &p : inventario) {
        if (p.nombre == nombre) {
            return p;
        }
    }
    return {"", 0.0};
}

float MainWindow::buscarPrecioProducto(const QString &nombre) {
    for (const auto &p : inventario) {
        if (p.nombre == nombre) {
            return p.precio;
        }
    }
    return 0.0;
}

void MainWindow::on_btnBuscar_clicked() {
    QString texto = ui->txtBuscar->text();
    ui->listaProductos->clear();

    for (const auto &producto : inventario) {
        if (producto.nombre.contains(texto, Qt::CaseInsensitive)) {
            ui->listaProductos->addItem(producto.nombre);
        }
    }
}

void MainWindow::on_btnAgregar_clicked() {
    QListWidgetItem* itemSeleccionado = ui->listaProductos->currentItem();
    if (!itemSeleccionado) return;

    QString nombre = itemSeleccionado->text();
    Producto p = buscarProductoPorNombre(nombre);

    int row = ui->tablaFactura->rowCount();
    ui->tablaFactura->insertRow(row);
    ui->tablaFactura->setItem(row, 0, new QTableWidgetItem(p.nombre));
    ui->tablaFactura->setItem(row, 1, new QTableWidgetItem("1"));
    ui->tablaFactura->setItem(row, 2, new QTableWidgetItem(QString::number(p.precio)));
}

void MainWindow::on_tablaFactura_cellChanged(int row, int column) {
    if (column == 1) {
        bool ok;
        int cantidad = ui->tablaFactura->item(row, 1)->text().toInt(&ok);
        if (!ok || cantidad < 1) return;

        float precioUnitario = buscarPrecioProducto(ui->tablaFactura->item(row, 0)->text());
        float total = cantidad * precioUnitario;

        ui->tablaFactura->setItem(row, 2, new QTableWidgetItem(QString::number(total, 'f', 2)));
    }
}

void MainWindow::on_btnVender_clicked() {
    QFile archivo("ventas.txt");
    if (!archivo.open(QIODevice::Append | QIODevice::Text)) {
        QMessageBox::warning(this, "Error", "No se pudo abrir el archivo de ventas.");
        return;
    }

    QTextStream out(&archivo);
    out << "----- Factura -----\n";
    out << QDateTime::currentDateTime().toString("yyyy-MM-dd hh:mm:ss") << "\n";

    float totalFactura = 0.0;
    for (int i = 0; i < ui->tablaFactura->rowCount(); ++i) {
        QString nombre = ui->tablaFactura->item(i, 0)->text();
        int cantidad = ui->tablaFactura->item(i, 1)->text().toInt();
        float total = ui->tablaFactura->item(i, 2)->text().toFloat();
        totalFactura += total;

        out << nombre << " x" << cantidad << " - Total: $" << total << "\n";
    }

    out << "TOTAL FACTURA: $" << totalFactura << "\n\n";
    archivo.close();

    QMessageBox::information(this, "Venta", "Factura guardada con éxito.");
    ui->tablaFactura->setRowCount(0);
}

